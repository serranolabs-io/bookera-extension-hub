/* tslint:disable */
/* eslint-disable */
/**
 * Extension Config API
 * API to submit and publish an ExtensionConfig object
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CreateExtension201Response,
  Extension,
} from '../models/index';
import {
    CreateExtension201ResponseFromJSON,
    CreateExtension201ResponseToJSON,
    ExtensionFromJSON,
    ExtensionToJSON,
} from '../models/index';

export interface CreateExtensionRequest {
    extension: Extension;
}

/**
 * 
 */
export class DefaultApi extends runtime.BaseAPI {

    /**
     * Submit a new extension config
     */
    async createExtensionRaw(requestParameters: CreateExtensionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CreateExtension201Response>> {
        if (requestParameters['extension'] == null) {
            throw new runtime.RequiredError(
                'extension',
                'Required parameter "extension" was null or undefined when calling createExtension().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/extensions`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: ExtensionToJSON(requestParameters['extension']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CreateExtension201ResponseFromJSON(jsonValue));
    }

    /**
     * Submit a new extension config
     */
    async createExtension(requestParameters: CreateExtensionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CreateExtension201Response> {
        const response = await this.createExtensionRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
